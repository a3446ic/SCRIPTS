CREATE LIBRARY "EXT"."LIB_CONSTANTES_SL" LANGUAGE SQLSCRIPT AS
BEGIN
  PUBLIC VARIABLE ENTIDAD_PELAYO					CONSTANT VARCHAR(255) := '418';
  PUBLIC VARIABLE ENTIDAD_SOS						CONSTANT VARCHAR(255) := '313';
  PUBLIC VARIABLE ENTIDAD_SVP						CONSTANT VARCHAR(255) := '556';
  PUBLIC VARIABLE ENTIDAD_SL						CONSTANT VARCHAR2(1) := '1';
  PUBLIC VARIABLE RAMO_PELAYO						CONSTANT VARCHAR(255) := '89';
  PUBLIC VARIABLE RAMO_SOS							CONSTANT VARCHAR(255) := '86';
  PUBLIC VARIABLE RAMO_SVPRENTAS					CONSTANT VARCHAR(255) := '94';
  PUBLIC VARIABLE RAMO_SVPUL						CONSTANT VARCHAR(255) := '91';
  PUBLIC VARIABLE RAMO_SVPPIAS						CONSTANT VARCHAR(255) := '92';
  PUBLIC VARIABLE RAMO_SVPPPI						CONSTANT VARCHAR(255) := '93';
  PUBLIC VARIABLE RAMO_AGRARIO						CONSTANT VARCHAR(255) := '18';
  PUBLIC VARIABLE CONST_SI							CONSTANT VARCHAR2(2) := 'SI';
  PUBLIC VARIABLE CONST_NO							CONSTANT VARCHAR2(2) := 'NO';
  PUBLIC VARIABLE CONST_S							CONSTANT VARCHAR2(1) := 'S';
  PUBLIC VARIABLE CONST_N							CONSTANT VARCHAR2(1) := 'N';
  PUBLIC VARIABLE CONST_S_1							CONSTANT VARCHAR2(1) := '1';
  PUBLIC VARIABLE CONST_N_0							CONSTANT VARCHAR2(1) := '0';
  PUBLIC VARIABLE STAGE_PUNTOS						CONSTANT VARCHAR(50) := 'EXT.SP_STAGE_PUNTOS';
  PUBLIC VARIABLE STAGE_COMISIONES			    	CONSTANT VARCHAR(50) := 'EXT.SP_STAGE_COMISIONES';
  PUBLIC VARIABLE STAGE_SUPLEMENTOS			    	CONSTANT VARCHAR(50) := 'EXT.SP_STAGE_SUPLEMENTOS';
  PUBLIC VARIABLE STAGE_PELAYO						CONSTANT VARCHAR(50) := 'EXT.SP_STAGE_PELAYO';
  PUBLIC VARIABLE STAGE_AGRARIO						CONSTANT VARCHAR(50) := 'EXT.SP_STAGE_AGRARIO';
  PUBLIC VARIABLE STAGE_SOS							CONSTANT VARCHAR(50) := 'EXT.SP_STAGE_SOS';
  PUBLIC VARIABLE STAGE_SVPPPI						CONSTANT VARCHAR(50) := 'EXT.SP_STAGE_SVPPPI';
  PUBLIC VARIABLE STAGE_SVP_RENTAS					CONSTANT VARCHAR(50) := 'EXT.SP_STAGE_SVP_RENTAS';
  PUBLIC VARIABLE STAGE_PRODUCCION_PELAYO			CONSTANT VARCHAR(50) := 'EXT.SP_STAGE_PRODUCCION_PELAYO';
  PUBLIC VARIABLE STAGE_PRODUCCION_SOS				CONSTANT VARCHAR(50) := 'EXT.SP_STAGE_PRODUCCION_SOS';
  PUBLIC VARIABLE STAGE_OPERACIONES_RENTAS			CONSTANT VARCHAR(50) := 'EXT.SP_STAGE_OPERACIONES_RENTAS';
  PUBLIC VARIABLE INF_N_COLABORADORES				CONSTANT VARCHAR(50) := 'EXT.SP_INF_NUMERO_COLABORADORES';
  PUBLIC VARIABLE INF_N_COMISIONES					CONSTANT VARCHAR(50) := 'EXT.SP_INF_NUMERO_COMISIONES';
  PUBLIC VARIABLE INF_REVISION_COMISIONES			CONSTANT VARCHAR(50) := 'EXT.SP_INF_REVISION_COMISIONES';
  PUBLIC VARIABLE INF_DESGLOSE_COMISIONES			CONSTANT VARCHAR(50) := 'EXT.SP_INF_DESGLOSE_COMISIONES';
  PUBLIC VARIABLE INF_N5AUCOPOFENO					CONSTANT VARCHAR(50) := 'EXT.SP_INF_N5AUCOPOFENO';
  PUBLIC VARIABLE INF_OBJETIVOS_AV					CONSTANT VARCHAR(50) := 'EXT.SP_INF_OBJETIVOS_AV';
  PUBLIC VARIABLE INF_FUNNEL_GLOBAL					CONSTANT VARCHAR(50) := 'EXT.SP_INF_FUNNEL_GLOBAL';
  PUBLIC VARIABLE INF_FUNNEL_TEYAME					CONSTANT VARCHAR(50) := 'EXT.SP_INF_FUNNEL_TEYAME';
  PUBLIC VARIABLE INF_PREVISION						CONSTANT VARCHAR(50) := 'EXT.SP_INF_PREVISION';
  PUBLIC VARIABLE INF_CHEQUEO						CONSTANT VARCHAR(50) := 'EXT.SP_INF_CHEQUEO';
  PUBLIC VARIABLE INF_COM_PELAYO					CONSTANT VARCHAR(50) := 'EXT.SP_INF_COM_PELAYO';
  PUBLIC VARIABLE INF_COM_PLANES_PENSIONES			CONSTANT VARCHAR(50) := 'EXT.SP_INF_COM_PLANES_PENSIONES';
  PUBLIC VARIABLE INF_DOCUMENTO_UNICO_LIQUIDACION	CONSTANT VARCHAR(50) := 'EXT.SP_INF_DOCUMENTO_UNICO_LIQUIDACION';
  PUBLIC VARIABLE INF_RESUMEN_LIQUIDACION			CONSTANT VARCHAR(50) := 'EXT.SP_INF_RESUMEN_LIQUIDACION';
  PUBLIC VARIABLE INF_COMPLEMENTOS_LIQUIDACION		CONSTANT VARCHAR(50) := 'EXT.SP_INF_COMPLEMENTOS_LIQUIDACION';
  PUBLIC VARIABLE INF_RESUMEN_FINANCIACION			CONSTANT VARCHAR(50) := 'EXT.SP_INF_RESUMEN_FINANCIACION';
  PUBLIC VARIABLE GENERA_CODIGO_SIIS				CONSTANT VARCHAR(50) := 'SP_SL_GENERA_CODIGO_SIIS';
  PUBLIC VARIABLE STAGE_SAPHR						CONSTANT VARCHAR(50) := 'EXT.SP_SAPHR';
  PUBLIC VARIABLE DESCARGA_HIST_COMISIONES   CONSTANT VARCHAR(50) := 'EXT.SP_DESCARGA_HIST_COMISIONES';
  PUBLIC VARIABLE DESCARGA_HIST_COMISIONES_OUT   CONSTANT VARCHAR(50) := 'EXT.DESCARGA_HIST_COMISIONES_OUT';
  PUBLIC VARIABLE v_eot								CONSTANT DATE := TO_DATE('22000101','yyyymmdd');
  PUBLIC VARIABLE PRESTAGE_STATUS_LOAD				CONSTANT INTEGER := 1;
  PUBLIC VARIABLE PRESTAGE_STATUS_OK				CONSTANT INTEGER := 2;
  PUBLIC VARIABLE PRESTAGE_STATUS_ERROR				CONSTANT INTEGER := 3;
  PUBLIC VARIABLE STAGE_STATUS_LOAD					CONSTANT INTEGER := 0;
  PUBLIC VARIABLE STAGE_STATUS_OK					CONSTANT INTEGER := 3;
  PUBLIC VARIABLE STAGE_STATUS_ERROR				CONSTANT INTEGER := 1;
  PUBLIC VARIABLE STAGE_STATUS_DUPLICATE			CONSTANT INTEGER := 4;
  PUBLIC VARIABLE IN_BATCH_CONTROL_PRELOAD			CONSTANT INTEGER := 0;
  PUBLIC VARIABLE IN_BATCH_CONTROL_LOAD				CONSTANT INTEGER := 1;
  PUBLIC VARIABLE IN_BATCH_CONTROL_OK				CONSTANT INTEGER := 2;
  PUBLIC VARIABLE IN_BATCH_CONTROL_ERROR			CONSTANT INTEGER := 3;
  PUBLIC VARIABLE OUT_BATCH_CONTROL_LOAD			CONSTANT INTEGER := 1;
  PUBLIC VARIABLE OUT_BATCH_CONTROL_OK				CONSTANT INTEGER := 2;
  PUBLIC VARIABLE OUT_BATCH_CONTROL_ERROR			CONSTANT INTEGER := 3;
  PUBLIC VARIABLE CONTROL_ODL_MARCA_FIN_FICH		CONSTANT VARCHAR2(3) := 'F';
  PUBLIC VARIABLE CONTROL_ODL_TOTAL_FICH			CONSTANT INTEGER := 5;
  PUBLIC VARIABLE CONTROL_ODL_TIPO_LOAD				CONSTANT VARCHAR2(7) := 'LOAD';
  PUBLIC VARIABLE CONTROL_ODL_TIPO_CALC				CONSTANT VARCHAR2(7) := 'CALC';
  PUBLIC VARIABLE CONTROL_ODL_TIPO_GEN_TRX			CONSTANT VARCHAR2(7) := 'GEN_TRX';
  PUBLIC VARIABLE CONTROL_ODL_EST_DELETED			CONSTANT INTEGER := -1;
  PUBLIC VARIABLE CONTROL_ODL_EST_LOAD				CONSTANT INTEGER := 1;
  PUBLIC VARIABLE CONTROL_ODL_EST_LOAD_ALL			CONSTANT INTEGER := 2;
  PUBLIC VARIABLE CONTROL_ODL_EST_LOAD_ERROR		CONSTANT INTEGER := 3;
  PUBLIC VARIABLE CONTROL_ODL_EST_CALC_RUN	    	CONSTANT INTEGER := 4;
  PUBLIC VARIABLE CONTROL_ODL_EST_CALC_OK			CONSTANT INTEGER := 5;
  PUBLIC VARIABLE CONTROL_ODL_EST_CALC_ERROR		CONSTANT INTEGER := 6;
  PUBLIC VARIABLE CONTROL_ODL_EST_GEN_TRX_RUN		CONSTANT INTEGER := 7;
  PUBLIC VARIABLE CONTROL_ODL_EST_GEN_TRX_OK		CONSTANT INTEGER := 8;
  PUBLIC VARIABLE CONTROL_ODL_EST_GEN_TRX_ERROR		CONSTANT INTEGER := 9;
  PUBLIC VARIABLE CONST_COBRADO  					CONSTANT VARCHAR2(2) := 'CB';
  PUBLIC VARIABLE CONST_PAGADO						CONSTANT VARCHAR2(2) := 'PG';
  PUBLIC VARIABLE CONST_PENDIENTE					CONSTANT VARCHAR2(2) := 'PP';
  PUBLIC VARIABLE CONST_CARGADO						CONSTANT VARCHAR2(2) := 'CA';
  PUBLIC VARIABLE CONST_DEVUELTO					CONSTANT VARCHAR2(2) := 'DV';
  PUBLIC VARIABLE CONST_NUEVAPRODUCCION				CONSTANT VARCHAR2(2) := 'NP';
  PUBLIC VARIABLE CONST_VENCIMIENTO					CONSTANT VARCHAR2(2) := 'V';
  PUBLIC VARIABLE CONST_SUPLEMENTO					CONSTANT VARCHAR2(2) := 'S';
  PUBLIC VARIABLE CONST_OTROS						CONSTANT VARCHAR2(2) := 'O';
  PUBLIC VARIABLE CONST_COMISION_NORMAL				CONSTANT VARCHAR2(2) := 'CN';
  PUBLIC VARIABLE CONST_COMISION_ANTICIPADA			CONSTANT VARCHAR2(2) := 'CA';
  PUBLIC VARIABLE CONST_COBRO_CENTRALIZADO			CONSTANT VARCHAR2(2) := 'C';
  PUBLIC VARIABLE CONST_COBRO_DESCENTRALIZADO		CONSTANT VARCHAR2(2) := 'D';
  PUBLIC VARIABLE INF_FICHERO_COM_COLAB				CONSTANT VARCHAR(50) := 'EXT.SP_FICHERO_COM_COLAB';
  PUBLIC VARIABLE INF_FICHERO_COM_MED				CONSTANT VARCHAR(50) := 'EXT.SP_FICHERO_COM_MED';
  PUBLIC FUNCTION getTenantID() RETURNS o_TI VARCHAR(4)
  AS
	BEGIN
		SELECT DISTINCT TENANTID
		INTO o_TI
		FROM TCMP.CS_CALENDAR;
	END;
  PUBLIC PROCEDURE WRITE_LOG (IN i_object VARCHAR2(400), IN i_txt VARCHAR2(4000), INOUT io_valor INT, IN i_idproceso BIGINT, IN i_loglevel VARCHAR(20)) LANGUAGE SQLSCRIPT 
  AS
	BEGIN
		
		DECLARE permiso_log INT:=0;
	
		SELECT cgc.GENERICBOOLEAN1 into permiso_log
		FROM cs_classifier clas
		INNER JOIN cs_genericclassifier cgc ON clas.classifierseq = cgc.classifierseq
			AND cgc.REMOVEDATE = to_Date('22000101','yyyymmdd') 
			AND cgc.EFFECTIVEENDDATE > CURRENT_DATE
			AND cgc.EFFECTIVESTARTDATE <= CURRENT_DATE
		WHERE clas.REMOVEDATE = to_Date('22000101','yyyymmdd')
			AND clas.EFFECTIVEENDDATE > CURRENT_DATE
			AND clas.EFFECTIVESTARTDATE <= CURRENT_DATE
			
			AND clas.name = i_loglevel;
				
		IF(permiso_log = 1)THEN
			INSERT INTO "EXT"."SL_LOG" (DATETIME, OBJECT, TEXT, VALUE, ID_PROCESO,LEVEL)
			VALUES (CURRENT_TIMESTAMP, i_object, i_txt, io_valor, i_idproceso,i_loglevel);
		
			io_valor:= io_valor + 1;
		
			COMMIT;
		END IF;
	END;
END